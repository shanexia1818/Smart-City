This is XeTeX, Version 3.14159265-2.6-0.99998 (MiKTeX 2.9.6350 64-bit) (preloaded format=xelatex 2018.6.5)  26 APR 2019 14:37
entering extended mode
**./proposal-report.tex
(proposal-report.tex
LaTeX2e <2017-04-15>
Babel <3.10> and hyphenation patterns for 75 language(s) loaded.
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\base\article.cls"
Document Class: article 2018/09/03 v1.4i Standard LaTeX document class
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\base\size10.clo"
File: size10.clo 2018/09/03 v1.4i Standard LaTeX file (size option)
)
\c@part=\count79
\c@section=\count80
\c@subsection=\count81
\c@subsubsection=\count82
\c@paragraph=\count83
\c@subparagraph=\count84
\c@figure=\count85
\c@table=\count86
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\graphics\graphicx.s
ty"
Package: graphicx 2017/06/01 v1.1a Enhanced LaTeX Graphics (DPC,SPQR)

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\graphics\keyval.sty
"
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks14
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\graphics\graphics.s
ty"
Package: graphics 2017/06/25 v1.2c Standard LaTeX Graphics (DPC,SPQR)

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\graphics\trig.sty"
Package: trig 2016/01/03 v1.10 sin cos tan (DPC)
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\graphics-cfg\graphi
cs.cfg"
File: graphics.cfg 2016/06/04 v1.11 sample graphics configuration
)
Package graphics Info: Driver file: xetex.def on input line 99.

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\graphics-def\xetex.
def"
File: xetex.def 2017/06/24 v5.0h Graphics/color driver for xetex
))
\Gin@req@height=\dimen103
\Gin@req@width=\dimen104
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\listings\listings.s
ty"
\lst@mode=\count87
\lst@gtempboxa=\box26
\lst@token=\toks15
\lst@length=\count88
\lst@currlwidth=\dimen105
\lst@column=\count89
\lst@pos=\count90
\lst@lostspace=\dimen106
\lst@width=\dimen107
\lst@newlines=\count91
\lst@lineno=\count92
\lst@maxwidth=\dimen108

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\listings\lstmisc.st
y"
File: lstmisc.sty 2019/02/27 1.8b (Carsten Heinz)
\c@lstnumber=\count93
\lst@skipnumbers=\count94
\lst@framebox=\box27
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\listings\listings.c
fg"
File: listings.cfg 2019/02/27 1.8b listings configuration
))
Package: listings 2019/02/27 1.8b (Carsten Heinz)

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\listings\lstlang1.s
ty"
File: lstlang1.sty 2019/02/27 1.8b listings language file
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\geometry\geometry.s
ty"
Package: geometry 2018/04/16 v5.8 Page Geometry

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\oberdiek\ifpdf.st
y"
Package: ifpdf 2018/09/07 v3.3 Provides the ifpdf switch
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\oberdiek\ifvtex.s
ty"
Package: ifvtex 2016/05/16 v1.6 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\ifxetex\ifxetex.s
ty"
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
\Gm@cnth=\count95
\Gm@cntv=\count96
\c@Gm@tempcnt=\count97
\Gm@bindingoffset=\dimen109
\Gm@wd@mp=\dimen110
\Gm@odd@mp=\dimen111
\Gm@even@mp=\dimen112
\Gm@layoutwidth=\dimen113
\Gm@layoutheight=\dimen114
\Gm@layouthoffset=\dimen115
\Gm@layoutvoffset=\dimen116
\Gm@dimlist=\toks16

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\xelatex\xetexconfig\geome
try.cfg"))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\pgf\frontendlayer\t
ikz.sty"
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\pgf\basiclayer\pgf.
sty"
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\pgf\utilities\pgfrc
s.sty"
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\utilities\pgf
util-common.tex"
\pgfutil@everybye=\toks17
\pgfutil@tempdima=\dimen117
\pgfutil@tempdimb=\dimen118

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\utilities\pgf
util-common-lists.tex"))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\utilities\pgf
util-latex.def"
\pgfutil@abb=\box28
 ("C:\Program Files\MiKTeX 2.9\tex\latex\ms\everyshi.sty"
Package: everyshi 2001/05/15 v3.00 EveryShipout Package (MS)
))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\utilities\pgf
rcs.code.tex"
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\pgf.revision.
tex")
Package: pgfrcs 2019/01/05 v3.1 (3.1)
))
Package: pgf 2019/01/05 v3.1 (3.1)

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\pgf\basiclayer\pgfc
ore.sty"
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\pgf\systemlayer\pgf
sys.sty"
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\systemlayer\p
gfsys.code.tex"
Package: pgfsys 2019/01/05 v3.1 (3.1)

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\utilities\pgf
keys.code.tex"
\pgfkeys@pathtoks=\toks18
\pgfkeys@temptoks=\toks19

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\utilities\pgf
keysfiltered.code.tex"
\pgfkeys@tmptoks=\toks20
))
\pgf@x=\dimen119
\pgf@y=\dimen120
\pgf@xa=\dimen121
\pgf@ya=\dimen122
\pgf@xb=\dimen123
\pgf@yb=\dimen124
\pgf@xc=\dimen125
\pgf@yc=\dimen126
\w@pgf@writea=\write3
\r@pgf@reada=\read1
\c@pgf@counta=\count98
\c@pgf@countb=\count99
\c@pgf@countc=\count100
\c@pgf@countd=\count101
\t@pgf@toka=\toks21
\t@pgf@tokb=\toks22
\t@pgf@tokc=\toks23
\pgf@sys@id@count=\count102

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\systemlayer\p
gf.cfg"
File: pgf.cfg 2019/01/05 v3.1 (3.1)
)
Driver file for pgf: pgfsys-xetex.def

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\systemlayer\p
gfsys-xetex.def"
File: pgfsys-xetex.def 2019/01/05 v3.1 (3.1)

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\systemlayer\p
gfsys-dvipdfmx.def"
File: pgfsys-dvipdfmx.def 2019/01/05 v3.1 (3.1)

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\systemlayer\p
gfsys-common-pdf.def"
File: pgfsys-common-pdf.def 2019/01/05 v3.1 (3.1)
)
\pgfsys@objnum=\count103
)))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\systemlayer\p
gfsyssoftpath.code.tex"
File: pgfsyssoftpath.code.tex 2019/01/05 v3.1 (3.1)
\pgfsyssoftpath@smallbuffer@items=\count104
\pgfsyssoftpath@bigbuffer@items=\count105
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\systemlayer\p
gfsysprotocol.code.tex"
File: pgfsysprotocol.code.tex 2019/01/05 v3.1 (3.1)
))
("C:\Program Files\MiKTeX 2.9\tex\latex\xcolor\xcolor.sty"
Package: xcolor 2016/05/11 v2.12 LaTeX color extensions (UK)

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\graphics-cfg\color.
cfg"
File: color.cfg 2016/01/02 v1.6 sample color configuration
)
Package xcolor Info: Driver file: xetex.def on input line 225.
Package xcolor Info: Model `cmy' substituted by `cmy0' on input line 1348.
Package xcolor Info: Model `RGB' extended on input line 1364.
Package xcolor Info: Model `HTML' substituted by `rgb' on input line 1366.
Package xcolor Info: Model `Hsb' substituted by `hsb' on input line 1367.
Package xcolor Info: Model `tHsb' substituted by `hsb' on input line 1368.
Package xcolor Info: Model `HSB' substituted by `hsb' on input line 1369.
Package xcolor Info: Model `Gray' substituted by `gray' on input line 1370.
Package xcolor Info: Model `wave' substituted by `hsb' on input line 1371.
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcore.code.tex"
Package: pgfcore 2019/01/05 v3.1 (3.1)

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmath.
code.tex"
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathc
alc.code.tex"
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathu
til.code.tex")
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathp
arser.code.tex"
\pgfmath@dimen=\dimen127
\pgfmath@count=\count106
\pgfmath@box=\box29
\pgfmath@toks=\toks24
\pgfmath@stack@operand=\toks25
\pgfmath@stack@operation=\toks26
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathf
unctions.code.tex"
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathf
unctions.basic.code.tex")
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathf
unctions.trigonometric.code.tex")
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathf
unctions.random.code.tex")
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathf
unctions.comparison.code.tex")
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathf
unctions.base.code.tex")
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathf
unctions.round.code.tex")
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathf
unctions.misc.code.tex")
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathf
unctions.integerarithmetics.code.tex")))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmathf
loat.code.tex"
\c@pgfmathroundto@lastzeros=\count107
))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcorepoints.code.tex"
File: pgfcorepoints.code.tex 2019/01/05 v3.1 (3.1)
\pgf@picminx=\dimen128
\pgf@picmaxx=\dimen129
\pgf@picminy=\dimen130
\pgf@picmaxy=\dimen131
\pgf@pathminx=\dimen132
\pgf@pathmaxx=\dimen133
\pgf@pathminy=\dimen134
\pgf@pathmaxy=\dimen135
\pgf@xx=\dimen136
\pgf@xy=\dimen137
\pgf@yx=\dimen138
\pgf@yy=\dimen139
\pgf@zx=\dimen140
\pgf@zy=\dimen141
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcorepathconstruct.code.tex"
File: pgfcorepathconstruct.code.tex 2019/01/05 v3.1 (3.1)
\pgf@path@lastx=\dimen142
\pgf@path@lasty=\dimen143
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcorepathusage.code.tex"
File: pgfcorepathusage.code.tex 2019/01/05 v3.1 (3.1)
\pgf@shorten@end@additional=\dimen144
\pgf@shorten@start@additional=\dimen145
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcorescopes.code.tex"
File: pgfcorescopes.code.tex 2019/01/05 v3.1 (3.1)
\pgfpic=\box30
\pgf@hbox=\box31
\pgf@layerbox@main=\box32
\pgf@picture@serial@count=\count108
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcoregraphicstate.code.tex"
File: pgfcoregraphicstate.code.tex 2019/01/05 v3.1 (3.1)
\pgflinewidth=\dimen146
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcoretransformations.code.tex"
File: pgfcoretransformations.code.tex 2019/01/05 v3.1 (3.1)
\pgf@pt@x=\dimen147
\pgf@pt@y=\dimen148
\pgf@pt@temp=\dimen149
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcorequick.code.tex"
File: pgfcorequick.code.tex 2019/01/05 v3.1 (3.1)
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcoreobjects.code.tex"
File: pgfcoreobjects.code.tex 2019/01/05 v3.1 (3.1)
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcorepathprocessing.code.tex"
File: pgfcorepathprocessing.code.tex 2019/01/05 v3.1 (3.1)
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcorearrows.code.tex"
File: pgfcorearrows.code.tex 2019/01/05 v3.1 (3.1)
\pgfarrowsep=\dimen150
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcoreshade.code.tex"
File: pgfcoreshade.code.tex 2019/01/05 v3.1 (3.1)
\pgf@max=\dimen151
\pgf@sys@shading@range@num=\count109
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcoreimage.code.tex"
File: pgfcoreimage.code.tex 2019/01/05 v3.1 (3.1)

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcoreexternal.code.tex"
File: pgfcoreexternal.code.tex 2019/01/05 v3.1 (3.1)
\pgfexternal@startupbox=\box33
))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcorelayers.code.tex"
File: pgfcorelayers.code.tex 2019/01/05 v3.1 (3.1)
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcoretransparency.code.tex"
File: pgfcoretransparency.code.tex 2019/01/05 v3.1 (3.1)
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcorepatterns.code.tex"
File: pgfcorepatterns.code.tex 2019/01/05 v3.1 (3.1)
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\basiclayer\pg
fcorerdf.code.tex"
File: pgfcorerdf.code.tex 2019/01/05 v3.1 (3.1)
)))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\modules\pgfmo
duleshapes.code.tex"
File: pgfmoduleshapes.code.tex 2019/01/05 v3.1 (3.1)
\pgfnodeparttextbox=\box34
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\modules\pgfmo
duleplot.code.tex"
File: pgfmoduleplot.code.tex 2019/01/05 v3.1 (3.1)
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\pgf\compatibility\p
gfcomp-version-0-65.sty"
Package: pgfcomp-version-0-65 2019/01/05 v3.1 (3.1)
\pgf@nodesepstart=\dimen152
\pgf@nodesepend=\dimen153
)
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\pgf\compatibility\p
gfcomp-version-1-18.sty"
Package: pgfcomp-version-1-18 2019/01/05 v3.1 (3.1)
))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\pgf\utilities\pgffo
r.sty"
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\pgf\utilities\pgfke
ys.sty"
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\utilities\pgf
keys.code.tex"))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\latex\pgf\math\pgfmath.st
y"
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmath.
code.tex"))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\utilities\pgf
for.code.tex"
Package: pgffor 2019/01/05 v3.1 (3.1)

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\math\pgfmath.
code.tex")
\pgffor@iter=\dimen154
\pgffor@skip=\dimen155
\pgffor@stack=\toks27
\pgffor@toks=\toks28
))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\frontendlayer
\tikz\tikz.code.tex"
Package: tikz 2019/01/05 v3.1 (3.1)

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\libraries\pgf
libraryplothandlers.code.tex"
File: pgflibraryplothandlers.code.tex 2019/01/05 v3.1 (3.1)
\pgf@plot@mark@count=\count110
\pgfplotmarksize=\dimen156
)
\tikz@lastx=\dimen157
\tikz@lasty=\dimen158
\tikz@lastxsaved=\dimen159
\tikz@lastysaved=\dimen160
\tikzleveldistance=\dimen161
\tikzsiblingdistance=\dimen162
\tikz@figbox=\box35
\tikz@figbox@bg=\box36
\tikz@tempbox=\box37
\tikz@tempbox@bg=\box38
\tikztreelevel=\count111
\tikznumberofchildren=\count112
\tikznumberofcurrentchild=\count113
\tikz@fig@count=\count114

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\modules\pgfmo
dulematrix.code.tex"
File: pgfmodulematrix.code.tex 2019/01/05 v3.1 (3.1)
\pgfmatrixcurrentrow=\count115
\pgfmatrixcurrentcolumn=\count116
\pgf@matrix@numberofcolumns=\count117
)
\tikz@expandcount=\count118

("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\frontendlayer
\tikz\libraries\tikzlibrarytopaths.code.tex"
File: tikzlibrarytopaths.code.tex 2019/01/05 v3.1 (3.1)
)))
("C:\Users\user\AppData\Local\Programs\MiKTeX 2.9\tex\generic\pgf\frontendlayer
\tikz\libraries\tikzlibrarycalc.code.tex"
File: tikzlibrarycalc.code.tex 2019/01/05 v3.1 (3.1)
) (proposal-report.aux)
\openout1 = `proposal-report.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 18.
LaTeX Font Info:    ... okay on input line 18.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 18.
LaTeX Font Info:    ... okay on input line 18.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 18.
LaTeX Font Info:    ... okay on input line 18.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 18.
LaTeX Font Info:    ... okay on input line 18.
LaTeX Font Info:    Checking defaults for TU/lmr/m/n on input line 18.
LaTeX Font Info:    ... okay on input line 18.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 18.
LaTeX Font Info:    ... okay on input line 18.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 18.
LaTeX Font Info:    ... okay on input line 18.
\c@lstlisting=\count119

*geometry* detected driver: pdftex
*geometry* verbose mode - [ preamble ] result:
* driver: pdftex
* paper: <default>
* layout: <same size as paper>
* layoutoffset:(h,v)=(0.0pt,0.0pt)
* modes: 
* h-part:(L,W,R)=(92.14519pt, 430.00462pt, 92.14519pt)
* v-part:(T,H,B)=(95.39737pt, 556.47656pt, 143.09605pt)
* \paperwidth=614.295pt
* \paperheight=794.96999pt
* \textwidth=430.00462pt
* \textheight=556.47656pt
* \oddsidemargin=19.8752pt
* \evensidemargin=19.8752pt
* \topmargin=-13.87262pt
* \headheight=12.0pt
* \headsep=25.0pt
* \topskip=10.0pt
* \footskip=30.0pt
* \marginparwidth=65.0pt
* \marginparsep=11.0pt
* \columnsep=10.0pt
* \skip\footins=9.0pt plus 4.0pt minus 2.0pt
* \hoffset=0.0pt
* \voffset=0.0pt
* \mag=1000
* \@twocolumnfalse
* \@twosidefalse
* \@mparswitchfalse
* \@reversemarginfalse
* (1in=72.27pt=25.4mm, 1cm=28.453pt)

ABD: EveryShipout initializing macros
File: nitk-logo.png Graphic file (type bmp)
<nitk-logo.png>
 [1

] [2] [1] (proposal-report.toc)
\tf@toc=\write4
\openout4 = `proposal-report.toc'.


[2] [1]
LaTeX Font Info:    Font shape `TU/lmtt/bx/n' in size <10> not available
(Font)              Font shape `TU/lmtt/b/n' tried instead on input line 118.
 [2]
Overfull \hbox (38.00014pt too wide) in paragraph at lines 163--165
[][][][][][][][][][][][][][][][][][][][][][][][][][] 
 []


Overfull \hbox (140.00117pt too wide) in paragraph at lines 179--181
[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][] 
 []

[3] [4]
! You can't use `macro parameter character #' in horizontal mode.
l.246 # def pathplan(c1, c2):  #
                                 file from image processing team
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 #     #
              let Building nodes named as A,b,c,d. and bots coordinates
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

[5]
Overfull \hbox (7.99983pt too wide) in paragraph at lines 295--296
[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][] 

 []

[6] [7]
! Missing $ inserted.
<inserted text> 
                $
l.399 ...001")  # create client object client1.on_
                                                  publish = on_publish #assi...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 399.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line 399.
! You can't use `macro parameter character #' in math mode.
l.399 ... object client1.on_publish = on_publish #
                                                  assign function to callbac...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.399 ...o callback client1.connect(broker,port) #
                                                  establish connection clien...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.399 ...on client1.publish("building/bulb1","on")
                                                  
(That makes 100 errors; please try again.) 
Here is how much of TeX's memory you used:
 12791 strings out of 427834
 250496 string characters out of 3152471
 325975 words of memory out of 3000000
 16563 multiletter control sequences out of 15000+200000
 3728 words of font info for 25 fonts, out of 3000000 for 9000
 1328 hyphenation exceptions out of 8191
 55i,6n,48p,430b,1569s stack positions out of 5000i,500n,10000p,200000b,50000s

Output written on proposal-report.pdf (11 pages).
